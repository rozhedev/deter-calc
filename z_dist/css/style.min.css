@font-face {
  font-family: "Commissioner";
  font-display: swap;
  src: url("../fonts/Commissioner-Regular.woff") format("woff"), url("../fonts/Commissioner-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: "Commissioner";
  font-display: swap;
  src: url("../fonts/Commissioner-Medium.woff") format("woff"), url("../fonts/Commissioner-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: "Commissioner";
  font-display: swap;
  src: url("../fonts/Commissioner-SemiBold.woff") format("woff"), url("../fonts/Commissioner-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
}
* {
  padding: 0px;
  margin: 0px;
  border: 0px;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

:focus,
:active {
  outline: none;
}

a:focus,
a:active {
  outline: none;
}

aside,
nav,
footer,
header,
section {
  display: block;
}

html {
  font-size: 18px;
  font-family: "Commissioner", sans-serif;
  font-weight: 400;
  line-height: 1.6;
  letter-spacing: 0.02em;
}
@media screen and (max-width: 1160px) {
  html {
    font-size: 16px;
  }
}

html,
body {
  height: 100%;
}

body {
  max-width: 1920px;
  min-width: 360px;
  margin: 0 auto;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body._lock {
  overflow: hidden !important;
}

input,
button,
textarea {
  font-family: "Commissioner";
  font-size: inherit;
}

input::-ms-clear {
  display: none;
}

button {
  cursor: pointer;
  background-color: inherit;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

a,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul li {
  list-style: none;
}

img {
  vertical-align: top;
  -o-object-fit: cover;
     object-fit: cover;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: inherit;
  font-size: inherit;
}

input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

input[type=number],
input[type=number]:hover,
input[type=number]:focus {
  -webkit-appearance: none;
          appearance: none;
  -moz-appearance: textfield;
}

.wrapper {
  max-width: 1920px;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  min-height: 100%;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.container {
  margin: 0 auto;
  max-width: 1360px;
  padding: 0 24px;
}
@media (max-width: 1360px) {
  .container {
    max-width: 1120px;
  }
}
@media (max-width: 1160px) {
  .container {
    max-width: 968px;
    padding: 0 16px;
  }
}
@media (max-width: 968px) {
  .container {
    max-width: 720px;
    padding: 0 12px;
  }
}
@media (max-width: 728px) {
  .container {
    max-width: 528px;
  }
}
@media (max-width: 536px) {
  .container {
    max-width: 352px;
  }
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-left: -24px;
  margin-right: -24px;
}
.row > * {
  margin: 0 16px;
}
@media (max-width: 1360px) {
  .row {
    margin-left: -16px;
    margin-right: -16px;
  }
  .row > * {
    margin: 0 12px;
  }
}
@media (max-width: 1160px) {
  .row {
    margin-left: -12px;
    margin-right: -12px;
  }
  .row > * {
    margin: 0 12px;
  }
}

.col {
  -webkit-box-flex: 1;
      -ms-flex: 1 0 0%;
          flex: 1 0 0%;
}

body {
  background: #fffcff;
  color: #0d090a;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}

.deter-calc .h1 {
  margin: 80px 0px 40px 0px;
  text-align: center;
}
@media (max-width: 1160px) {
  .deter-calc .h1 {
    margin: 64px 0px 32px 0px;
  }
}

.h1 {
  font-size: 2.488rem;
  font-weight: 600;
  line-height: 1.6;
  letter-spacing: 0.04em;
}
@media (max-width: 1160px) {
  .h1 {
    font-size: 2.074rem;
  }
}

.h3 {
  font-size: 1.728rem;
  font-weight: 600;
  line-height: 1.6;
  letter-spacing: 0.02em;
}
@media (max-width: 728px) {
  .h3 {
    font-size: 1.44rem;
  }
}

.btn {
  padding: 0.5rem 1.5rem;
  font-size: 1.2rem;
  font-weight: 600;
  line-height: 1.6;
  letter-spacing: 0.02em;
  border-radius: 4px;
  color: #fffcff;
  background-color: #1b998b;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
@media (any-hover: hover) {
  .btn:hover {
    background-color: #24cdba;
  }
}
@media (max-width: 1160px) {
  .btn {
    font-size: 1rem;
  }
}

.navlink {
  position: relative;
  font-size: 1.2rem;
  font-weight: 600;
  line-height: 1.6;
  letter-spacing: 0.02em;
  color: #0d090a;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}

.link {
  color: #0075c4;
  text-decoration: underline;
}
@media (any-hover: hover) {
  .link:hover {
    text-decoration: none;
  }
}

.label {
  font-size: 1.115rem;
  font-weight: 500;
  line-height: 1.6;
  letter-spacing: 0.02em;
}

.error-text {
  opacity: 0;
  pointer-events: none;
  font-size: 0.75rem;
  font-weight: 500;
  line-height: 1.25;
  color: #cf5c36;
}
._error .error-text {
  opacity: 1;
  pointer-events: all;
}

.inp {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: calc(25% - 32px);
  padding: 8px 6px;
  color: #0d090a;
  background-color: #fffcff;
  border-bottom: 3px solid #247ba0;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
@media (max-width: 1160px) {
  .inp {
    width: calc(25% - 24px);
  }
}
@media (max-width: 968px) {
  .inp {
    width: calc(25% - 24px);
  }
}
@media (max-width: 728px) {
  .inp {
    width: calc(150% - 16px);
  }
}
@media (max-width: 536px) {
  .inp {
    width: calc(150% - 16px);
  }
}
._error .inp, ._error .inp:focus {
  border-color: #cf5c36;
  background-color: #faefeb;
}
._success .inp, ._success .inp:focus {
  border-color: #1b998b;
  background-color: #d9f8f5;
}
.inp:focus {
  border-color: #0075c4;
  background-color: #e3f4ff;
}
@media (max-width: 728px) {
  .inp {
    width: 320px;
  }
}

.ordered-list {
  counter-reset: myCounter;
}
.ordered-list li {
  list-style: none;
  margin: 0 0 0 16px;
}
.ordered-list li::before {
  counter-increment: myCounter;
  content: counter(myCounter);
  color: #1b998b;
  display: inline;
  font-weight: 600;
  margin: 0 10px 0 0;
}

.unordered-list li {
  margin: 6px 0;
}
.unordered-list li::before {
  content: "";
  display: inline-block;
  width: 6px;
  height: 6px;
  border-radius: 999px;
  background-color: #1b998b;
  margin: 0px 8px 1px 16px;
}

.preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #fffcff;
  z-index: 100;
}

.loader {
  display: block;
  position: relative;
  left: 50%;
  top: 50%;
  width: 150px;
  height: 150px;
  margin: -75px 0 0 -75px;
  border-radius: 50%;
  border: 6px solid transparent;
  border-top-color: #0075c4;
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
}
.loader:before {
  content: "";
  position: absolute;
  top: 10px;
  left: 10px;
  right: 10px;
  bottom: 10px;
  border-radius: 50%;
  border: 6px solid transparent;
  border-top-color: #1b998b;
  -webkit-animation: spin 3s linear infinite;
  animation: spin 3s linear infinite;
}
.loader:after {
  content: "";
  position: absolute;
  top: 30px;
  left: 30px;
  right: 30px;
  bottom: 30px;
  border-radius: 50%;
  border: 6px solid transparent;
  border-top-color: #cf5c36;
  -webkit-animation: spin 1.5s linear infinite;
  animation: spin 1.5s linear infinite;
}

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
.loaded-hiding .preloader {
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
  opacity: 0;
}

.loaded .preloader {
  display: none;
}

.tabs {
  width: 100%;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
.tabs__nav {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: calc(66.6666666667% - 32px);
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin: 0 auto 40px;
}
@media (max-width: 1160px) {
  .tabs__nav {
    width: calc(66.6666666667% - 24px);
  }
}
@media (max-width: 968px) {
  .tabs__nav {
    width: calc(66.6666666667% - 24px);
  }
}
@media (max-width: 728px) {
  .tabs__nav {
    width: calc(400% - 16px);
  }
}
@media (max-width: 536px) {
  .tabs__nav {
    width: calc(400% - 16px);
  }
}
.tabs__nav::after {
  content: "";
  position: absolute;
  bottom: -6px;
  left: 0;
  width: 100%;
  height: 6px;
  border-radius: 0 0 4px 4px;
  background-color: #0075c4;
}
@media (max-width: 728px) {
  .tabs__nav::after {
    display: none;
  }
}
@media (max-width: 1160px) {
  .tabs__nav {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    width: calc(83.3333333333% - 32px);
  }
}
@media (max-width: 1160px) and (max-width: 1160px) {
  .tabs__nav {
    width: calc(83.3333333333% - 24px);
  }
}
@media (max-width: 1160px) and (max-width: 968px) {
  .tabs__nav {
    width: calc(83.3333333333% - 24px);
  }
}
@media (max-width: 1160px) and (max-width: 728px) {
  .tabs__nav {
    width: calc(500% - 16px);
  }
}
@media (max-width: 1160px) and (max-width: 536px) {
  .tabs__nav {
    width: calc(500% - 16px);
  }
}
@media (max-width: 968px) {
  .tabs__nav {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    width: calc(100% - 32px);
  }
}
@media (max-width: 968px) and (max-width: 1160px) {
  .tabs__nav {
    width: calc(100% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 968px) {
  .tabs__nav {
    width: calc(100% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 728px) {
  .tabs__nav {
    width: calc(600% - 16px);
  }
}
@media (max-width: 968px) and (max-width: 536px) {
  .tabs__nav {
    width: calc(600% - 16px);
  }
}
@media (max-width: 728px) {
  .tabs__nav {
    width: 100%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}
.tabs__nav-item {
  padding: 0.33rem 1rem;
  background-color: #f5f5f5;
  border-top: 4px solid #f5f5f5;
  border-left: 4px solid #f5f5f5;
  border-right: 4px solid #f5f5f5;
  border-radius: 4px 4px 0px 0px;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
.tabs__nav-item:not(:first-of-type) {
  margin-left: 2rem;
}
.tabs__nav-item:hover, .tabs__nav-item._active {
  background-color: #fffcff;
  border-top: 4px solid #0075c4;
  border-left: 4px solid #0075c4;
  border-right: 4px solid #0075c4;
  width: initial;
  color: initial;
}
.tabs__nav-item:hover::after, .tabs__nav-item._active::after {
  display: none;
}
.tabs__nav-item._active {
  cursor: default;
}
@media (max-width: 728px) {
  .tabs__nav-item:not(:first-of-type) {
    margin-left: 0;
    margin-top: 2rem;
  }
  .tabs__nav-item:hover, .tabs__nav-item._active {
    border: 4px solid #0075c4;
    border-radius: 4px;
  }
}
.tabs__content-item {
  width: 100%;
  display: none;
  grid-template: repeat(3, minmax(3rem, auto))/repeat(2, 1fr);
  grid-auto-rows: minmax(3rem, auto);
  grid-auto-columns: 1fr;
  grid-gap: 32px;
}
.tabs__content-item._active {
  display: grid;
}
@media (max-width: 968px) {
  .tabs__content-item {
    grid-template: repeat(4, minmax(3rem, auto))/1fr;
  }
}

.form-controller {
  position: relative;
  width: 100%;
}
.form-controller__inp {
  width: inherit;
  margin-top: 16px;
}

.result-item__content {
  margin-bottom: 50px;
}
.result-item__label, .result-item__value, .result-item__currency {
  font-size: 1.33rem;
}
@media (max-width: 1160px) {
  .result-item__label, .result-item__value, .result-item__currency {
    font-size: 1.5rem;
  }
}
@media (max-width: 728px) {
  .result-item__label, .result-item__value, .result-item__currency {
    font-size: 1.3rem;
  }
}
.result-item__label {
  font-weight: 500;
}
.result-item__value {
  margin-left: 0.6rem;
}

.deter-calc .h1 {
  margin: 80px 0px 40px 0px;
  text-align: center;
}
@media (max-width: 1160px) {
  .deter-calc .h1 {
    margin: 64px 0px 32px 0px;
  }
}
.deter-calc .calc-steps {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: calc(100% - 32px);
}
@media (max-width: 1160px) {
  .deter-calc .calc-steps {
    width: calc(100% - 24px);
  }
}
@media (max-width: 968px) {
  .deter-calc .calc-steps {
    width: calc(100% - 24px);
  }
}
@media (max-width: 728px) {
  .deter-calc .calc-steps {
    width: calc(600% - 16px);
  }
}
@media (max-width: 536px) {
  .deter-calc .calc-steps {
    width: calc(600% - 16px);
  }
}
.deter-calc .calc-steps__item:not(:first-of-type) {
  margin-top: 1.5rem;
}
.deter-calc .calc-steps .tabs__content-item._active {
  display: block;
}
.deter-calc .calc-steps__form {
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}
.deter-calc .calc-steps__form[data-grid="2"] {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: calc(50% - 32px);
}
@media (max-width: 1160px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(50% - 24px);
  }
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(50% - 24px);
  }
}
@media (max-width: 728px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(300% - 16px);
  }
}
@media (max-width: 536px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(300% - 16px);
  }
}
.deter-calc .calc-steps__form[data-grid="2"] .calc-steps__content-item {
  grid-template-columns: repeat(2, 1fr);
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    width: calc(83.3333333333% - 32px);
  }
}
@media (max-width: 968px) and (max-width: 1160px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(83.3333333333% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(83.3333333333% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 728px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(500% - 16px);
  }
}
@media (max-width: 968px) and (max-width: 536px) {
  .deter-calc .calc-steps__form[data-grid="2"] {
    width: calc(500% - 16px);
  }
}
.deter-calc .calc-steps__form[data-grid="3"] {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: calc(50% - 32px);
}
@media (max-width: 1160px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(50% - 24px);
  }
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(50% - 24px);
  }
}
@media (max-width: 728px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(300% - 16px);
  }
}
@media (max-width: 536px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(300% - 16px);
  }
}
.deter-calc .calc-steps__form[data-grid="3"] .calc-steps__content-item {
  grid-template-columns: repeat(3, 1fr);
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    width: calc(83.3333333333% - 32px);
  }
}
@media (max-width: 968px) and (max-width: 1160px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(83.3333333333% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(83.3333333333% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 728px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(500% - 16px);
  }
}
@media (max-width: 968px) and (max-width: 536px) {
  .deter-calc .calc-steps__form[data-grid="3"] {
    width: calc(500% - 16px);
  }
}
.deter-calc .calc-steps__form[data-grid="4"] {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: calc(66.6666666667% - 32px);
}
@media (max-width: 1160px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(66.6666666667% - 24px);
  }
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(66.6666666667% - 24px);
  }
}
@media (max-width: 728px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(400% - 16px);
  }
}
@media (max-width: 536px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(400% - 16px);
  }
}
.deter-calc .calc-steps__form[data-grid="4"] .calc-steps__content-item {
  grid-template-columns: repeat(4, 1fr);
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    width: calc(100% - 32px);
  }
}
@media (max-width: 968px) and (max-width: 1160px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(100% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 968px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(100% - 24px);
  }
}
@media (max-width: 968px) and (max-width: 728px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(600% - 16px);
  }
}
@media (max-width: 968px) and (max-width: 536px) {
  .deter-calc .calc-steps__form[data-grid="4"] {
    width: calc(600% - 16px);
  }
}
@media (max-width: 728px) {
  .deter-calc .calc-steps__form[data-grid="2"], .deter-calc .calc-steps__form[data-grid="3"], .deter-calc .calc-steps__form[data-grid="4"] {
    width: 328px;
  }
}
.deter-calc .calc-steps__form .btn {
  margin: 1rem auto 0;
  width: initial;
}
.deter-calc .calc-steps__content-item {
  display: grid;
  grid-template-rows: repeat(1, minmax(3rem, auto));
  grid-auto-rows: minmax(3rem, auto);
  grid-gap: 0px 32px;
}
@media (max-width: 728px) {
  .deter-calc .calc-steps__content-item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    width: calc(16.6666666667% - 32px);
    grid-template-rows: repeat(4, 1fr);
    grid-template-columns: 1fr !important;
  }
}
@media (max-width: 728px) and (max-width: 1160px) {
  .deter-calc .calc-steps__content-item {
    width: calc(16.6666666667% - 24px);
  }
}
@media (max-width: 728px) and (max-width: 968px) {
  .deter-calc .calc-steps__content-item {
    width: calc(16.6666666667% - 24px);
  }
}
@media (max-width: 728px) and (max-width: 728px) {
  .deter-calc .calc-steps__content-item {
    width: calc(100% - 16px);
  }
}
@media (max-width: 728px) and (max-width: 536px) {
  .deter-calc .calc-steps__content-item {
    width: calc(100% - 16px);
  }
}
.deter-calc .calc-steps__result {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: calc(66.6666666667% - 32px);
  margin: 1.75rem auto 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
@media (max-width: 1160px) {
  .deter-calc .calc-steps__result {
    width: calc(66.6666666667% - 24px);
  }
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__result {
    width: calc(66.6666666667% - 24px);
  }
}
@media (max-width: 728px) {
  .deter-calc .calc-steps__result {
    width: calc(400% - 16px);
  }
}
@media (max-width: 536px) {
  .deter-calc .calc-steps__result {
    width: calc(400% - 16px);
  }
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__result {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}
.deter-calc .calc-steps__result-col:hover .step-title svg.expenses {
  fill: rgba(207, 92, 54, 0.32);
}
.deter-calc .calc-steps__result-col:hover .step-title svg.profit {
  fill: rgba(27, 153, 139, 0.32);
}
@media (max-width: 968px) {
  .deter-calc .calc-steps__result-col {
    width: 100%;
    margin-top: 40px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */